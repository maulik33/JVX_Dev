
/*
Do Not modify this file. This file is generated by Jvx Code Gen Tool.
Generated: 01/26/2012 13:50:58
*/

using System.IO;
using System.Text;
using System.Data;
using System.Drawing;
using System.Windows.Forms;
using System.Collections;
using System.Collections.Generic;
using System.Xml;
using System.Xml.Serialization;

namespace Jvx.Core.ProductModel

{
	public enum NavigationMode
	{
		 NonLinear,
		 Linear,
	}


	public enum ComponentType
	{
		 None,
		 Preview,
		 Class,
		 Review,
		 Recommended,
	}


	public enum ComponentPurpose
	{
		 None,
		 Assessment,
		 QBank,
		 Instruction,
		 Video,
		 Game,
		 Mixed,
		 Offline,
	}


	public enum AssignmentType
	{
		 Info,
		 Online,
		 Class,
	}


	public enum SequenceMode
	{
		 Test = 1,
		 Tutor = 2,
		 Review = 3,
	}


	public enum TimingMode
	{
		 NotTimed = 1,
		 Timed = 2,
		 Inherited = 3,
	}


	public enum SequenceNumberingMode
	{
		 Section = 1,
		 Test = 2,
		 SectionGroup = 3,
	}


	public enum SequencePurpose
	{
		 None,
		 Diagnostic,
		 PreTest,
		 PostTest,
		 Simulation,
		 Quiz,
		 Qbank,
		 Instruction,
		 Workshop,
		 Video,
		 Game,
		 Mixed,
		 Offline,
		 QRater,
		 External,
		 ExternalUpt,
		 ScienceAssessment,
		 SectionTest,
		 FullLengthPractice,
		 TopicalTest,
	}


	public enum ContentItemSetDisplayType
	{
		 Standard = 1,
		 All = 2,
		 Sequential = 3,
	}


	public enum NodeType
	{
		 Sequence,
		 SectionGroup,
		 Section,
		 Content,
	}


	public enum InteractionType
	{
		 None,
		 SingleAnswerMultipleChoice,
		 MultipleAnswerMultipleChoice,
		 EssayQuestion,
		 GridIn,
		 HotSpot,
		 Annotation,
		 Flag,
		 Highlighting,
		 Mark,
		 StrikeThrough,
		 Guess,
		 SelfDiagnosis,
		 ExplanationViewed,
		 AnswerBlank,
		 NumberInteraction,
		 NumericBlank,
		 OrderMatch,
		 PhoneNumber,
		 PickListInteraction,
		 ScrambledParagraph,
		 EssayScore,
		 HighlightBlank,
		 Exercise,
		 CompletionTracker,
		 DateTimeInteraction,
		 Rating,
	}


	public enum SequenceTemplateType
	{
		 Test = 1,
		 Lesson = 2,
		 Mixed = 3,
	}


	public enum SequenceTemplateItemNodeType
	{
		 LinearSection,
		 QBankSection,
		 DynamicSection,
		 AdaptiveSection,
		 SectionGroup,
		 ContentItem,
		 ContentItemSet,
	}


	public enum TestletType
	{
		 None,
		 Operational,
		 Experimental,
	}


	public enum ContentItemSetType
	{
		 NonFractionable = 1,
		 Fractionable = 2,
		 Sequential = 3,
	}


	public enum SchemaType
	{
		 None,
		 CatalystQti,
		 Dictera,
		 JasperFlipItem,
		 JasperInstructionItem,
		 MediaItem,
	}


	public enum DocumentType
	{
		 None,
		 Question,
		 TutorialItem,
		 Document,
		 Page,
		 LessonPage,
		 Concepticon,
		 Video,
		 Audio,
		 Animation,
		 Image,
		 ClinicalCorrelate,
	}


	public enum AlignmentType
	{
		 None,
		 Skills,
		 Strategies,
		 Attributes,
		 SkillChoose,
		 SkillEliminate,
		 StrategyEliminate,
	}


	public enum RuleType
	{
		 Pre,
		 Post,
	}


	public enum ConditionType
	{
		 IsCorrectCondition,
		 AnswerChoiceCondition,
		 ScoreCondition,
	}


	public enum BinaryOperator
	{
		 EQ,
		 NE,
	}


	public enum RelationalOperator
	{
		 EQ,
		 NE,
		 GT,
		 LT,
		 GE,
		 LE,
	}


	public enum TargetType
	{
		 Navigate,
		 Fixed,
	}


	public enum FixedTargetType
	{
		 ExitSection,
		 ExitSectionGroup,
		 ExitSequence,
	}



	[XmlRoot("Product")]
	[Serializable]
	public partial class Product
	{
		private readonly JNameObjectCollection<ProductSyllabus>    _productSyllabi;

		public  Product() 
		{
			_productSyllabi = new JNameObjectCollection<ProductSyllabus>();
			Properties = null;
			Active = true;
			HsgEligible = false;
		}


		[XmlAttribute("name")]
		public string Name { get; set; }

		[XmlAttribute("title")]
		public string Title { get; set; }

		[XmlAttribute("active")]
		public bool Active { get; set; }

		[XmlAttribute("versionId")]
		public int VersionId { get; set; }

		[XmlAttribute("kbsProductId")]
		public int KbsProductId { get; set; }

		[XmlAttribute("kbsProductCode")]
		public string KbsProductCode { get; set; }

		[XmlAttribute("hsgEligible")]
		public bool HsgEligible { get; set; }


		[XmlArray("productSyllabi")]
		[XmlArrayItem("productSyllabus")]
		public JNameObjectCollection<ProductSyllabus> ProductSyllabi
		{
			 get { return _productSyllabi; }
		}

		[XmlArray("properties")]
		[XmlArrayItem("property")]
		public JNameObjectCollection<Property> Properties { get; set; }


	}

	[XmlRoot("ProductSyllabus")]
	[Serializable]
	public partial class ProductSyllabus
	{

		public  ProductSyllabus() 
		{
			IsDefault = false;
		}


		[XmlAttribute("name")]
		public string Name { get; set; }

		[XmlAttribute("title")]
		public string Title { get; set; }

		[XmlAttribute("kbsProdConfigId")]
		public string KbsProdConfigId { get; set; }

		[XmlIgnore]
		public DateTime? ClassStartDate { get; set; }

		[XmlAttribute("classStartDate")]
		[JsonIgnore]
		public string ClassStartDateString
		{
			get { return (ClassStartDate.HasValue) ? ClassStartDate.ToString() : null; }
			set { ClassStartDate = (string.IsNullOrEmpty(value)) ? default(DateTime?):DateTime.Parse(value);}
		}

		[XmlAttribute("homePage")]
		public string HomePage { get; set; }

		[XmlAttribute("isDefault")]
		public bool IsDefault { get; set; }


		[XmlElement("syllabus",typeof(Syllabus))]
		public Syllabus Syllabus { get; set; }


	}

	[XmlRoot("Property")]
	[Serializable]
	public partial class Property
	{

		[XmlAttribute("name")]
		public string Name { get; set; }

		[XmlAttribute("value")]
		public string Value { get; set; }



	}

	[XmlRoot("Syllabus")]
	[Serializable]
	public partial class Syllabus
	{

		public  Syllabus() 
		{
			SyllabusComponentGroupRefs = null;
			ComponentRefs = null;
			Resources = null;
			ProductCategoryDimensionRefs = null;
			Properties = null;
			AliasedContentItems = null;
			AliasedStyleSheets = null;
			DefaultStyleSheets = null;
			Pages = null;
			Active = true;
			NavigationMode = NavigationMode.NonLinear;
		}


		[XmlAttribute("name")]
		public string Name { get; set; }

		[XmlAttribute("title")]
		public string Title { get; set; }

		[XmlAttribute("active")]
		public bool Active { get; set; }

		[XmlAttribute("versionId")]
		public int VersionId { get; set; }

		[XmlAttribute("shortTitle")]
		public string ShortTitle { get; set; }

		[XmlAttribute("homePage")]
		public string HomePage { get; set; }

		[XmlIgnore]
		public NavigationMode NavigationMode { get; set; }

		[XmlAttribute("navigationMode")]
		public string NavigationModeString
		{
			get { return NavigationMode.ToString(); }
			set
			{
				NavigationMode navigationMode;
				if (Enum.TryParse(value, true, out navigationMode))
					NavigationMode = navigationMode;
			}
		}


		[XmlArray("syllabusComponentGroupRefs")]
		[XmlArrayItem("syllabusComponentGroupRef")]
		public JNameObjectCollection<SyllabusComponentGroupRef> SyllabusComponentGroupRefs { get; set; }

		[XmlArray("componentRefs")]
		[XmlArrayItem("componentRef")]
		public JNameObjectCollection<ComponentRef> ComponentRefs { get; set; }

		[XmlArray("resources")]
		[XmlArrayItem("resource")]
		public JNameObjectCollection<Resource> Resources { get; set; }

		[XmlElement("courseProvider",typeof(CourseProvider))]
		public CourseProvider CourseProvider { get; set; }

		[XmlArray("productCategoryDimensionRefs")]
		[XmlArrayItem("productCategoryDimensionRef")]
		public JObjectCollection<ProductCategoryDimensionRef> ProductCategoryDimensionRefs { get; set; }

		[XmlArray("properties")]
		[XmlArrayItem("property")]
		public JNameObjectCollection<Property> Properties { get; set; }

		[XmlArray("aliasedContentItems")]
		[XmlArrayItem("aliasedContentItem")]
		public JNameObjectCollection<AliasedContentItem> AliasedContentItems { get; set; }

		[XmlArray("aliasedStyleSheets")]
		[XmlArrayItem("aliasedStyleSheet")]
		public JNameObjectCollection<AliasedStyleSheet> AliasedStyleSheets { get; set; }

		[XmlArray("defaultStyleSheets")]
		[XmlArrayItem("defaultStyleSheet")]
		public JObjectCollection<DefaultStyleSheet> DefaultStyleSheets { get; set; }

		[XmlArray("pages")]
		[XmlArrayItem("page")]
		public JNameObjectCollection<Page> Pages { get; set; }


	}

	[XmlRoot("SyllabusComponentGroupRef")]
	[Serializable]
	public partial class SyllabusComponentGroupRef
	{

		public  SyllabusComponentGroupRef() 
		{
			Show = true;
			IsDynamic = false;
		}


		[XmlAttribute("name")]
		public string Name { get; set; }

		[XmlAttribute("title")]
		public string Title { get; set; }

		[XmlAttribute("order")]
		public int Order { get; set; }

		[XmlAttribute("show")]
		public bool Show { get; set; }

		[XmlAttribute("kbsSessionTopicId")]
		public string KbsSessionTopicId { get; set; }

		[XmlAttribute("isDynamic")]
		public bool IsDynamic { get; set; }

		[XmlAttribute("homePage")]
		public string HomePage { get; set; }


		[XmlElement("syllabusComponentGroup",typeof(SyllabusComponentGroup))]
		public SyllabusComponentGroup SyllabusComponentGroup { get; set; }


	}

	[XmlRoot("ComponentRef")]
	[Serializable]
	public partial class ComponentRef
	{

		public  ComponentRef() 
		{
			Show = true;
			Type = ComponentType.None;
			IsDynamic = false;
		}


		[XmlAttribute("name")]
		public string Name { get; set; }

		[XmlAttribute("title")]
		public string Title { get; set; }

		[XmlAttribute("order")]
		public int Order { get; set; }

		[XmlAttribute("show")]
		public bool Show { get; set; }

		[XmlIgnore]
		public ComponentType Type { get; set; }

		[XmlAttribute("type")]
		public string TypeString
		{
			get { return Type.ToString(); }
			set
			{
				ComponentType type;
				if (Enum.TryParse(value, true, out type))
					Type = type;
			}
		}

		[XmlAttribute("kbsSessionTopicId")]
		public string KbsSessionTopicId { get; set; }

		[XmlAttribute("isDynamic")]
		public bool IsDynamic { get; set; }

		[XmlAttribute("homePage")]
		public string HomePage { get; set; }


		[XmlElement("component",typeof(Component))]
		public Component Component { get; set; }


	}

	[XmlRoot("Resource")]
	[Serializable]
	public partial class Resource
	{

		[XmlAttribute("name")]
		public string Name { get; set; }

		[XmlAttribute("title")]
		public string Title { get; set; }

		[XmlAttribute("startPage")]
		public string StartPage { get; set; }

		[XmlAttribute("syllabusPath")]
		public string SyllabusPath { get; set; }



	}

	[XmlRoot("CourseProvider")]
	[Serializable]
	public partial class CourseProvider
	{

		[XmlAttribute("providerName")]
		public string ProviderName { get; set; }



	}

	[XmlRoot("ProductCategoryDimensionRef")]
	[Serializable]
	public partial class ProductCategoryDimensionRef
	{

		public  ProductCategoryDimensionRef() 
		{
			Show = true;
		}


		[XmlAttribute("title")]
		public string Title { get; set; }

		[XmlAttribute("shortTitle")]
		public string ShortTitle { get; set; }

		[XmlAttribute("show")]
		public bool Show { get; set; }


		[XmlElement("categoryDimension",typeof(ProductCategoryDimension))]
		public ProductCategoryDimension CategoryDimension { get; set; }


	}

	[XmlRoot("AliasedContentItem")]
	[Serializable]
	public partial class AliasedContentItem
	{

		[XmlAttribute("name")]
		public string Name { get; set; }

		[XmlAttribute("fileName")]
		public string FileName { get; set; }



	}

	[XmlRoot("AliasedStyleSheet")]
	[Serializable]
	public partial class AliasedStyleSheet
	{

		[XmlAttribute("name")]
		public string Name { get; set; }

		[XmlAttribute("styleSheetName")]
		public string StyleSheetName { get; set; }



	}

	[XmlRoot("DefaultStyleSheet")]
	[Serializable]
	public partial class DefaultStyleSheet
	{

		[XmlAttribute("documentTypeName")]
		public string DocumentTypeName { get; set; }

		[XmlAttribute("styleSheetName")]
		public string StyleSheetName { get; set; }



	}

	[XmlRoot("Page")]
	[Serializable]
	public partial class Page
	{

		[XmlAttribute("name")]
		public string Name { get; set; }

		[XmlAttribute("styleSheetName")]
		public string StyleSheetName { get; set; }

		[XmlAttribute("fileName")]
		public string FileName { get; set; }



	}

	[XmlRoot("SyllabusComponentGroup")]
	[Serializable]
	public partial class SyllabusComponentGroup
	{

		public  SyllabusComponentGroup() 
		{
			SyllabusComponentGroupRefs = null;
			ComponentRefs = null;
			Properties = null;
			Active = true;
			NavigationMode = NavigationMode.NonLinear;
		}


		[XmlAttribute("name")]
		public string Name { get; set; }

		[XmlAttribute("title")]
		public string Title { get; set; }

		[XmlAttribute("active")]
		public bool Active { get; set; }

		[XmlAttribute("versionId")]
		public int VersionId { get; set; }

		[XmlAttribute("shortTitle")]
		public string ShortTitle { get; set; }

		[XmlAttribute("homePage")]
		public string HomePage { get; set; }

		[XmlIgnore]
		public NavigationMode NavigationMode { get; set; }

		[XmlAttribute("navigationMode")]
		public string NavigationModeString
		{
			get { return NavigationMode.ToString(); }
			set
			{
				NavigationMode navigationMode;
				if (Enum.TryParse(value, true, out navigationMode))
					NavigationMode = navigationMode;
			}
		}


		[XmlArray("syllabusComponentGroupRefs")]
		[XmlArrayItem("syllabusComponentGroupRef")]
		public JNameObjectCollection<SyllabusComponentGroupRef> SyllabusComponentGroupRefs { get; set; }

		[XmlArray("componentRefs")]
		[XmlArrayItem("componentRef")]
		public JNameObjectCollection<ComponentRef> ComponentRefs { get; set; }

		[XmlElement("courseProvider",typeof(CourseProvider))]
		public CourseProvider CourseProvider { get; set; }

		[XmlArray("properties")]
		[XmlArrayItem("property")]
		public JNameObjectCollection<Property> Properties { get; set; }


	}

	[XmlRoot("Component")]
	[Serializable]
	public partial class Component
	{

		public  Component() 
		{
			Assignments = null;
			SequenceTemplates = null;
			ContentPools = null;
			Testlets = null;
			Properties = null;
			Active = true;
			NavigationMode = NavigationMode.NonLinear;
			ModeBaseSequenceInterface = false;
		}


		[XmlAttribute("name")]
		public string Name { get; set; }

		[XmlAttribute("title")]
		public string Title { get; set; }

		[XmlAttribute("active")]
		public bool Active { get; set; }

		[XmlAttribute("versionId")]
		public int VersionId { get; set; }

		[XmlAttribute("shortTitle")]
		public string ShortTitle { get; set; }

		[XmlAttribute("homePage")]
		public string HomePage { get; set; }

		[XmlIgnore]
		public NavigationMode NavigationMode { get; set; }

		[XmlAttribute("navigationMode")]
		public string NavigationModeString
		{
			get { return NavigationMode.ToString(); }
			set
			{
				NavigationMode navigationMode;
				if (Enum.TryParse(value, true, out navigationMode))
					NavigationMode = navigationMode;
			}
		}

		[XmlIgnore]
		public ComponentPurpose Purpose { get; set; }

		[XmlAttribute("purpose")]
		public string PurposeString
		{
			get { return Purpose.ToString(); }
			set
			{
				ComponentPurpose purpose;
				if (Enum.TryParse(value, true, out purpose))
					Purpose = purpose;
			}
		}

		[XmlAttribute("sequenceInterface")]
		public string SequenceInterface { get; set; }

		[XmlAttribute("modeBaseSequenceInterface")]
		public bool ModeBaseSequenceInterface { get; set; }

		[XmlAttribute("sequenceAnalysisTemplate")]
		public string SequenceAnalysisTemplate { get; set; }

		[XmlAttribute("sequenceItemListTemplate")]
		public string SequenceItemListTemplate { get; set; }

		[XmlAttribute("sequenceGuidanceTemplate")]
		public string SequenceGuidanceTemplate { get; set; }

		[XmlAttribute("sequencePrintoutTemplate")]
		public string SequencePrintoutTemplate { get; set; }


		[XmlArray("assignments")]
		[XmlArrayItem("assignment")]
		public JNameObjectCollection<Assignment> Assignments { get; set; }

		[XmlArray("sequenceTemplates")]
		[XmlArrayItem("componentSequenceTemplate")]
		public JNameObjectCollection<ComponentSequenceTemplate> SequenceTemplates { get; set; }

		[XmlArray("contentPools")]
		[XmlArrayItem("componentContentPool")]
		public JObjectCollection<ComponentContentPool> ContentPools { get; set; }

		[XmlArray("testlets")]
		[XmlArrayItem("componentTestlet")]
		public JObjectCollection<ComponentTestlet> Testlets { get; set; }

		[XmlElement("courseProvider",typeof(CourseProvider))]
		public CourseProvider CourseProvider { get; set; }

		[XmlArray("properties")]
		[XmlArrayItem("property")]
		public JNameObjectCollection<Property> Properties { get; set; }


	}

	[XmlRoot("Assignment")]
	[Serializable]
	public partial class Assignment
	{

		public  Assignment() 
		{
			IsOptional = false;
		}


		[XmlAttribute("name")]
		public string Name { get; set; }

		[XmlAttribute("title")]
		public string Title { get; set; }

		[XmlAttribute("shortTitle")]
		public string ShortTitle { get; set; }

		[XmlAttribute("order")]
		public int Order { get; set; }

		[XmlIgnore]
		public AssignmentType Type { get; set; }

		[XmlAttribute("type")]
		public string TypeString
		{
			get { return Type.ToString(); }
			set
			{
				AssignmentType type;
				if (Enum.TryParse(value, true, out type))
					Type = type;
			}
		}

		[XmlAttribute("isOptional")]
		public bool IsOptional { get; set; }



	}

	[XmlRoot("OnlineAssignment")]
	[Serializable]
	public partial class OnlineAssignment : Assignment
	{
		private readonly JNameObjectCollection<ComponentSequenceTemplate>    _sequenceTemplates;

		public  OnlineAssignment() 
		{
			_sequenceTemplates = new JNameObjectCollection<ComponentSequenceTemplate>();
		}



		[XmlArray("sequenceTemplates")]
		[XmlArrayItem("componentSequenceTemplate")]
		public JNameObjectCollection<ComponentSequenceTemplate> SequenceTemplates
		{
			 get { return _sequenceTemplates; }
		}


	}

	[XmlRoot("ClassAssignment")]
	[Serializable]
	public partial class ClassAssignment : Assignment
	{
		private readonly JNameObjectCollection<ComponentSequenceTemplate>    _sequenceTemplates;

		public  ClassAssignment() 
		{
			_sequenceTemplates = new JNameObjectCollection<ComponentSequenceTemplate>();
		}



		[XmlArray("sequenceTemplates")]
		[XmlArrayItem("componentSequenceTemplate")]
		public JNameObjectCollection<ComponentSequenceTemplate> SequenceTemplates
		{
			 get { return _sequenceTemplates; }
		}

		[XmlElement("infoAssignment",typeof(InfoAssignment))]
		public InfoAssignment InfoAssignment { get; set; }


	}

	[XmlRoot("InfoAssignment")]
	[Serializable]
	public partial class InfoAssignment : Assignment
	{
		private readonly JObjectCollection<InfoUri>    _infoUris;

		public  InfoAssignment() 
		{
			_infoUris = new JObjectCollection<InfoUri>();
		}



		[XmlArray("infoUris")]
		[XmlArrayItem("infoUri")]
		public JObjectCollection<InfoUri> InfoUris
		{
			 get { return _infoUris; }
		}


	}

	[XmlRoot("InfoUri")]
	[Serializable]
	public partial class InfoUri
	{

		[XmlAttribute("uri")]
		public string Uri { get; set; }



	}

	[XmlRoot("ComponentSequenceTemplate")]
	[Serializable]
	public partial class ComponentSequenceTemplate
	{

		public  ComponentSequenceTemplate() 
		{
			SequenceTimingInfo = null;
			ResultSubscribers = null;
			Active = true;
			SequenceMode = SequenceMode.Test;
			NumberingMode = SequenceNumberingMode.Section;
			MaxUses = 1;
			Randomize = false;
			Hidden = false;
			ModeBaseSequenceInterface = false;
			ContentItemSetDisplayType = ContentItemSetDisplayType.Standard;
		}


		[XmlAttribute("name")]
		public string Name { get; set; }

		[XmlAttribute("title")]
		public string Title { get; set; }

		[XmlAttribute("active")]
		public bool Active { get; set; }

		[XmlAttribute("versionId")]
		public int VersionId { get; set; }

		[XmlAttribute("shortTitle")]
		public string ShortTitle { get; set; }

		[XmlAttribute("order")]
		public int Order { get; set; }

		[XmlIgnore]
		public SequenceMode SequenceMode { get; set; }

		[XmlAttribute("sequenceMode")]
		public string SequenceModeString
		{
			get { return SequenceMode.ToString(); }
			set
			{
				SequenceMode sequenceMode;
				if (Enum.TryParse(value, true, out sequenceMode))
					SequenceMode = sequenceMode;
			}
		}

		[XmlIgnore]
		public TimingMode TimingMode { get; set; }

		[XmlAttribute("timingMode")]
		public string TimingModeString
		{
			get { return TimingMode.ToString(); }
			set
			{
				TimingMode timingMode;
				if (Enum.TryParse(value, true, out timingMode))
					TimingMode = timingMode;
			}
		}

		[XmlIgnore]
		public SequenceNumberingMode NumberingMode { get; set; }

		[XmlAttribute("numberingMode")]
		public string NumberingModeString
		{
			get { return NumberingMode.ToString(); }
			set
			{
				SequenceNumberingMode numberingMode;
				if (Enum.TryParse(value, true, out numberingMode))
					NumberingMode = numberingMode;
			}
		}

		[XmlAttribute("maxUses")]
		public int MaxUses { get; set; }

		[XmlAttribute("randomize")]
		public bool Randomize { get; set; }

		[XmlAttribute("hidden")]
		public bool Hidden { get; set; }

		[XmlAttribute("startPage")]
		public string StartPage { get; set; }

		[XmlAttribute("endPage")]
		public string EndPage { get; set; }

		[XmlIgnore]
		public SequencePurpose Purpose { get; set; }

		[XmlAttribute("purpose")]
		public string PurposeString
		{
			get { return Purpose.ToString(); }
			set
			{
				SequencePurpose purpose;
				if (Enum.TryParse(value, true, out purpose))
					Purpose = purpose;
			}
		}

		[XmlAttribute("sequenceInterface")]
		public string SequenceInterface { get; set; }

		[XmlAttribute("modeBaseSequenceInterface")]
		public bool ModeBaseSequenceInterface { get; set; }

		[XmlAttribute("sequenceAnalysisTemplate")]
		public string SequenceAnalysisTemplate { get; set; }

		[XmlAttribute("sequenceItemListTemplate")]
		public string SequenceItemListTemplate { get; set; }

		[XmlAttribute("sequenceGuidanceTemplate")]
		public string SequenceGuidanceTemplate { get; set; }

		[XmlAttribute("sequencePrintoutTemplate")]
		public string SequencePrintoutTemplate { get; set; }

		[XmlIgnore]
		public ContentItemSetDisplayType ContentItemSetDisplayType { get; set; }

		[XmlAttribute("contentItemSetDisplayType")]
		public string ContentItemSetDisplayTypeString
		{
			get { return ContentItemSetDisplayType.ToString(); }
			set
			{
				ContentItemSetDisplayType contentItemSetDisplayType;
				if (Enum.TryParse(value, true, out contentItemSetDisplayType))
					ContentItemSetDisplayType = contentItemSetDisplayType;
			}
		}


		[XmlElement("sequenceTemplate",typeof(SequenceTemplate))]
		public SequenceTemplate SequenceTemplate { get; set; }

		[XmlElement("sequenceRule",typeof(SequenceRule))]
		public SequenceRule SequenceRule { get; set; }

		[XmlElement("scoringInfo",typeof(ScoringInfo))]
		public ScoringInfo ScoringInfo { get; set; }

		[XmlArray("sequenceTimingInfo")]
		[XmlArrayItem("timingInfo")]
		public JObjectCollection<TimingInfo> SequenceTimingInfo { get; set; }

		[XmlArray("resultSubscribers")]
		[XmlArrayItem("sequenceResultSubscriber")]
		public JNameObjectCollection<SequenceResultSubscriber> ResultSubscribers { get; set; }


	}

	[XmlRoot("ScoringInfo")]
	[Serializable]
	public partial class ScoringInfo
	{

		[XmlAttribute("assessmentName")]
		public string AssessmentName { get; set; }

		[XmlAttribute("scoreLookupDataFileName")]
		public string ScoreLookupDataFileName { get; set; }



	}

	[XmlRoot("TimingInfo")]
	[Serializable]
	public partial class TimingInfo
	{

		[XmlIgnore]
		public NodeType NodeType { get; set; }

		[XmlAttribute("nodeType")]
		public string NodeTypeString
		{
			get { return NodeType.ToString(); }
			set
			{
				NodeType nodeType;
				if (Enum.TryParse(value, true, out nodeType))
					NodeType = nodeType;
			}
		}

		[XmlAttribute("nodeName")]
		public string NodeName { get; set; }

		[XmlIgnore]
		public TimingMode TimingMode { get; set; }

		[XmlAttribute("timingMode")]
		public string TimingModeString
		{
			get { return TimingMode.ToString(); }
			set
			{
				TimingMode timingMode;
				if (Enum.TryParse(value, true, out timingMode))
					TimingMode = timingMode;
			}
		}

		[XmlAttribute("mSecGranted")]
		public int MSecGranted { get; set; }



	}

	[XmlRoot("SequenceResultSubscriber")]
	[Serializable]
	public partial class SequenceResultSubscriber
	{

		[XmlAttribute("name")]
		public string Name { get; set; }



	}

	[XmlRoot("ComponentContentPool")]
	[Serializable]
	public partial class ComponentContentPool
	{

		public  ComponentContentPool() 
		{
			Selectable = true;
		}


		[XmlAttribute("priority")]
		public int Priority { get; set; }

		[XmlAttribute("selectable")]
		public bool Selectable { get; set; }


		[XmlElement("contentPool",typeof(ContentPool))]
		public ContentPool ContentPool { get; set; }


	}

	[XmlRoot("ComponentTestlet")]
	[Serializable]
	public partial class ComponentTestlet
	{


		[XmlElement("testlet",typeof(Testlet))]
		public Testlet Testlet { get; set; }


	}

	[XmlRoot("SequenceTemplate")]
	[Serializable]
	public partial class SequenceTemplate
	{
		private readonly JObjectCollection<SequenceTemplateItem>    _sequenceTemplateItems;

		public  SequenceTemplate() 
		{
			_sequenceTemplateItems = new JObjectCollection<SequenceTemplateItem>();
			Categories = null;
			Properties = null;
			Active = true;
		}


		[XmlAttribute("name")]
		public string Name { get; set; }

		[XmlAttribute("title")]
		public string Title { get; set; }

		[XmlAttribute("active")]
		public bool Active { get; set; }

		[XmlAttribute("versionId")]
		public int VersionId { get; set; }

		[XmlIgnore]
		public SequenceTemplateType Type { get; set; }

		[XmlAttribute("type")]
		public string TypeString
		{
			get { return Type.ToString(); }
			set
			{
				SequenceTemplateType type;
				if (Enum.TryParse(value, true, out type))
					Type = type;
			}
		}


		[XmlArray("sequenceTemplateItems")]
		[XmlArrayItem("sequenceTemplateItem")]
		public JObjectCollection<SequenceTemplateItem> SequenceTemplateItems
		{
			 get { return _sequenceTemplateItems; }
		}

		[XmlArray("categories")]
		[XmlArrayItem("itemCategory")]
		public JObjectCollection<ItemCategory> Categories { get; set; }

		[XmlArray("properties")]
		[XmlArrayItem("property")]
		public JNameObjectCollection<Property> Properties { get; set; }


	}

	[XmlRoot("SequenceTemplateItem")]
	[Serializable]
	public partial class SequenceTemplateItem
	{

		[XmlIgnore]
		public SequenceTemplateItemNodeType NodeType { get; set; }

		[XmlAttribute("nodeType")]
		public string NodeTypeString
		{
			get { return NodeType.ToString(); }
			set
			{
				SequenceTemplateItemNodeType nodeType;
				if (Enum.TryParse(value, true, out nodeType))
					NodeType = nodeType;
			}
		}

		[XmlAttribute("order")]
		public int Order { get; set; }



	}

	[XmlRoot("SequenceTemplateContentItemBase")]
	[Serializable]
	public partial class SequenceTemplateContentItemBase : SequenceTemplateItem
	{



	}

	[XmlRoot("SequenceTemplateContentItem")]
	[Serializable]
	public partial class SequenceTemplateContentItem : SequenceTemplateContentItemBase
	{

		[XmlAttribute("styleSheetName")]
		public string StyleSheetName { get; set; }

		[XmlAttribute("scorable")]
		public bool Scorable { get; set; }

		[XmlAttribute("path")]
		public string Path { get; set; }


		[XmlElement("contentItem",typeof(ContentItem))]
		public ContentItem ContentItem { get; set; }


	}

	[XmlRoot("SequenceTemplateContentItemSet")]
	[Serializable]
	public partial class SequenceTemplateContentItemSet : SequenceTemplateContentItemBase
	{

		[XmlAttribute("styleSheetName")]
		public string StyleSheetName { get; set; }

		[XmlAttribute("scorable")]
		public bool Scorable { get; set; }

		[XmlAttribute("path")]
		public string Path { get; set; }

		[XmlIgnore]
		public ContentItemSetDisplayType DisplayType { get; set; }

		[XmlAttribute("displayType")]
		public string DisplayTypeString
		{
			get { return DisplayType.ToString(); }
			set
			{
				ContentItemSetDisplayType displayType;
				if (Enum.TryParse(value, true, out displayType))
					DisplayType = displayType;
			}
		}


		[XmlElement("contentItemSet",typeof(ContentItemSet))]
		public ContentItemSet ContentItemSet { get; set; }


	}

	[XmlRoot("SequenceTemplateSectionItem")]
	[Serializable]
	public partial class SequenceTemplateSectionItem : SequenceTemplateItem
	{

		[XmlAttribute("path")]
		public string Path { get; set; }


		[XmlElement("sequenceSection",typeof(SequenceSection))]
		public SequenceSection SequenceSection { get; set; }


	}

	[XmlRoot("SequenceSection")]
	[Serializable]
	public partial class SequenceSection
	{

		public  SequenceSection() 
		{
			Scored = true;
		}


		[XmlAttribute("name")]
		public string Name { get; set; }

		[XmlAttribute("title")]
		public string Title { get; set; }

		[XmlAttribute("scored")]
		public bool Scored { get; set; }



	}

	[XmlRoot("QBankSection")]
	[Serializable]
	public partial class QBankSection : SequenceSection
	{


		[XmlElement("contentSource",typeof(SequenceContentSource))]
		public SequenceContentSource ContentSource { get; set; }


	}

	[XmlRoot("SequenceContentSource")]
	[Serializable]
	public partial class SequenceContentSource
	{

		public  SequenceContentSource() 
		{
			ComponentContentPools = null;
		}



		[XmlArray("componentContentPools")]
		[XmlArrayItem("componentContentPoolRef")]
		public JObjectCollection<ComponentContentPoolRef> ComponentContentPools { get; set; }


	}

	[XmlRoot("componentContentPoolRef")]
	[Serializable]
	public partial class ComponentContentPoolRef
	{

		[XmlAttribute("componentContentPoolName")]
		public string ComponentContentPoolName { get; set; }



	}

	[XmlRoot("SequenceContentFilter")]
	[Serializable]
	public partial class SequenceContentFilter
	{

		public  SequenceContentFilter() 
		{
			CategoryDimensionFilters = null;
		}



		[XmlArray("categoryDimensionFilters")]
		[XmlArrayItem("categoryDimensionFilter")]
		public JObjectCollection<CategoryDimensionFilter> CategoryDimensionFilters { get; set; }


	}

	[XmlRoot("CategoryDimensionFilter")]
	[Serializable]
	public partial class CategoryDimensionFilter
	{

		public  CategoryDimensionFilter() 
		{
			Inclusive = true;
		}


		[XmlAttribute("categoryDimensionName")]
		public string CategoryDimensionName { get; set; }

		[XmlAttribute("categoryName")]
		public string CategoryName { get; set; }

		[XmlAttribute("inclusive")]
		public bool Inclusive { get; set; }



	}

	[XmlRoot("LinearSection")]
	[Serializable]
	public partial class LinearSection : SequenceSection
	{
		private readonly JObjectCollection<SequenceTemplateContentItemBase>    _sequenceSectionItems;

		public  LinearSection() 
		{
			_sequenceSectionItems = new JObjectCollection<SequenceTemplateContentItemBase>();
			Randomize = false;
		}


		[XmlAttribute("randomize")]
		public bool Randomize { get; set; }

		[XmlAttribute("totalCount")]
		public int TotalCount { get; set; }


		[XmlArray("sequenceSectionItems")]
		[XmlArrayItem("sequenceTemplateContentItemBase")]
		public JObjectCollection<SequenceTemplateContentItemBase> SequenceSectionItems
		{
			 get { return _sequenceSectionItems; }
		}


	}

	[XmlRoot("DynamicSection")]
	[Serializable]
	public partial class DynamicSection : SequenceSection
	{

		[XmlAttribute("totalCount")]
		public int TotalCount { get; set; }


		[XmlElement("contentSource",typeof(SequenceContentSource))]
		public SequenceContentSource ContentSource { get; set; }

		[XmlElement("contentFilter",typeof(SequenceContentFilter))]
		public SequenceContentFilter ContentFilter { get; set; }


	}

	[XmlRoot("AdaptiveSection")]
	[Serializable]
	public partial class AdaptiveSection : SequenceSection
	{
		private readonly JObjectCollection<TestletRef>    _testlets;

		public  AdaptiveSection() 
		{
			_testlets = new JObjectCollection<TestletRef>();
		}


		[XmlAttribute("totalCount")]
		public int TotalCount { get; set; }


		[XmlArray("testlets")]
		[XmlArrayItem("testletRef")]
		public JObjectCollection<TestletRef> Testlets
		{
			 get { return _testlets; }
		}


	}

	[XmlRoot("TestletRef")]
	[Serializable]
	public partial class TestletRef
	{

		[XmlIgnore]
		public TestletType TestletType { get; set; }

		[XmlAttribute("testletType")]
		public string TestletTypeString
		{
			get { return TestletType.ToString(); }
			set
			{
				TestletType testletType;
				if (Enum.TryParse(value, true, out testletType))
					TestletType = testletType;
			}
		}

		[XmlAttribute("order")]
		public int Order { get; set; }



	}

	[XmlRoot("SectionGroup")]
	[Serializable]
	public partial class SectionGroup : SequenceSection
	{
		private readonly JObjectCollection<SequenceTemplateItem>    _sequenceTemplateItems;

		public  SectionGroup() 
		{
			_sequenceTemplateItems = new JObjectCollection<SequenceTemplateItem>();
		}



		[XmlArray("sequenceTemplateItems")]
		[XmlArrayItem("sequenceTemplateItem")]
		public JObjectCollection<SequenceTemplateItem> SequenceTemplateItems
		{
			 get { return _sequenceTemplateItems; }
		}


	}

	[XmlRoot("ItemCategory")]
	[Serializable]
	public partial class ItemCategory
	{

		[XmlAttribute("categoryGuid")]
		public string CategoryGuid { get; set; }



	}

	[XmlRoot("ContentPool")]
	[Serializable]
	public partial class ContentPool
	{
		private readonly JNameObjectCollection<ContentPoolItemBase>    _contentItems;

		public  ContentPool() 
		{
			_contentItems = new JNameObjectCollection<ContentPoolItemBase>();
			Active = true;
		}


		[XmlAttribute("name")]
		public string Name { get; set; }

		[XmlAttribute("title")]
		public string Title { get; set; }

		[XmlAttribute("active")]
		public bool Active { get; set; }

		[XmlAttribute("versionId")]
		public int VersionId { get; set; }


		[XmlArray("contentItems")]
		[XmlArrayItem("contentPoolItemBase")]
		public JNameObjectCollection<ContentPoolItemBase> ContentItems
		{
			 get { return _contentItems; }
		}


	}

	[XmlRoot("ContentPoolItemBase")]
	[Serializable]
	public partial class ContentPoolItemBase
	{

		[XmlAttribute("name")]
		public string Name { get; set; }



	}

	[XmlRoot("ContentPoolItem")]
	[Serializable]
	public partial class ContentPoolItem : ContentPoolItemBase
	{


		[XmlElement("contentItem",typeof(ContentItem))]
		public ContentItem ContentItem { get; set; }


	}

	[XmlRoot("ContentPoolItemSet")]
	[Serializable]
	public partial class ContentPoolItemSet : ContentPoolItemBase
	{
		private readonly JNameObjectCollection<ContentPoolItem>    _contentItems;

		public  ContentPoolItemSet() 
		{
			_contentItems = new JNameObjectCollection<ContentPoolItem>();
		}


		[XmlAttribute("childCount")]
		public int ChildCount { get; set; }


		[XmlElement("contentItemSet",typeof(ContentItemSet))]
		public ContentItemSet ContentItemSet { get; set; }

		[XmlArray("contentItems")]
		[XmlArrayItem("contentPoolItem")]
		public JNameObjectCollection<ContentPoolItem> ContentItems
		{
			 get { return _contentItems; }
		}


	}

	[XmlRoot("Testlet")]
	[Serializable]
	public partial class Testlet
	{
		private readonly JNameObjectCollection<ContentItem>    _contentItems;

		public  Testlet() 
		{
			_contentItems = new JNameObjectCollection<ContentItem>();
			Active = true;
			Scored = true;
			Randomize = false;
		}


		[XmlAttribute("name")]
		public string Name { get; set; }

		[XmlAttribute("title")]
		public string Title { get; set; }

		[XmlAttribute("active")]
		public bool Active { get; set; }

		[XmlAttribute("versionId")]
		public int VersionId { get; set; }

		[XmlAttribute("scored")]
		public bool Scored { get; set; }

		[XmlAttribute("totalCount")]
		public int TotalCount { get; set; }

		[XmlAttribute("randomize")]
		public bool Randomize { get; set; }

		[XmlIgnore]
		public TestletType Type { get; set; }

		[XmlAttribute("type")]
		public string TypeString
		{
			get { return Type.ToString(); }
			set
			{
				TestletType type;
				if (Enum.TryParse(value, true, out type))
					Type = type;
			}
		}

		[XmlAttribute("thetaLevelMin")]
		public decimal ThetaLevelMin { get; set; }

		[XmlAttribute("thetaLevelMax")]
		public decimal ThetaLevelMax { get; set; }


		[XmlArray("contentItems")]
		[XmlArrayItem("contentItem")]
		public JNameObjectCollection<ContentItem> ContentItems
		{
			 get { return _contentItems; }
		}


	}

	[XmlRoot("ProductCategoryDimension")]
	[Serializable]
	public partial class ProductCategoryDimension
	{
		private readonly JNameObjectCollection<ProductCategory>    _categories;

		public  ProductCategoryDimension() 
		{
			_categories = new JNameObjectCollection<ProductCategory>();
			Active = true;
		}


		[XmlAttribute("name")]
		public string Name { get; set; }

		[XmlAttribute("title")]
		public string Title { get; set; }

		[XmlAttribute("active")]
		public bool Active { get; set; }

		[XmlAttribute("versionId")]
		public int VersionId { get; set; }

		[XmlAttribute("shortTitle")]
		public string ShortTitle { get; set; }


		[XmlArray("categories")]
		[XmlArrayItem("productCategory")]
		public JNameObjectCollection<ProductCategory> Categories
		{
			 get { return _categories; }
		}


	}

	[XmlRoot("ProductCategory")]
	[Serializable]
	public partial class ProductCategory
	{

		public  ProductCategory() 
		{
			CategoryMappings = null;
			AllCategoryMappings = null;
			Categories = null;
			PrecedentPaths = null;
		}


		[XmlAttribute("name")]
		public string Name { get; set; }

		[XmlAttribute("title")]
		public string Title { get; set; }

		[XmlAttribute("shortTitle")]
		public string ShortTitle { get; set; }

		[XmlAttribute("nodePath")]
		public string NodePath { get; set; }

		[XmlAttribute("secondaryTitle")]
		public string SecondaryTitle { get; set; }

		[XmlAttribute("opportunityValue")]
		public decimal OpportunityValue { get; set; }

		[XmlAttribute("order")]
		public int Order { get; set; }

		[XmlAttribute("depth")]
		public int Depth { get; set; }


		[XmlArray("categoryMappings")]
		[XmlArrayItem("productCategoryMapping")]
		public JObjectCollection<ProductCategoryMapping> CategoryMappings { get; set; }

		[XmlArray("allCategoryMappings")]
		[XmlArrayItem("productCategoryMapping")]
		public JObjectCollection<ProductCategoryMapping> AllCategoryMappings { get; set; }

		[XmlArray("categories")]
		[XmlArrayItem("productCategory")]
		public JNameObjectCollection<ProductCategory> Categories { get; set; }

		[XmlArray("precedentPaths")]
		[XmlArrayItem("precedence")]
		public JObjectCollection<Precedence> PrecedentPaths { get; set; }


	}

	[XmlRoot("ProductCategoryMapping")]
	[Serializable]
	public partial class ProductCategoryMapping
	{

		[XmlAttribute("categoryGuid")]
		public string CategoryGuid { get; set; }



	}

	[XmlRoot("Precedence")]
	[Serializable]
	public partial class Precedence
	{

		[XmlAttribute("precedentPath")]
		public string PrecedentPath { get; set; }



	}

	[XmlRoot("ContentItemSet")]
	[Serializable]
	public partial class ContentItemSet
	{
		private readonly JObjectCollection<ContentItemSetMember>    _contentItems;

		public  ContentItemSet() 
		{
			_contentItems = new JObjectCollection<ContentItemSetMember>();
			Categories = null;
			Active = true;
		}


		[XmlAttribute("name")]
		public string Name { get; set; }

		[XmlAttribute("title")]
		public string Title { get; set; }

		[XmlAttribute("active")]
		public bool Active { get; set; }

		[XmlAttribute("versionId")]
		public int VersionId { get; set; }

		[XmlIgnore]
		public ContentItemSetType Type { get; set; }

		[XmlAttribute("type")]
		public string TypeString
		{
			get { return Type.ToString(); }
			set
			{
				ContentItemSetType type;
				if (Enum.TryParse(value, true, out type))
					Type = type;
			}
		}


		[XmlArray("contentItems")]
		[XmlArrayItem("contentItemSetMember")]
		public JObjectCollection<ContentItemSetMember> ContentItems
		{
			 get { return _contentItems; }
		}

		[XmlArray("categories")]
		[XmlArrayItem("itemCategory")]
		public JObjectCollection<ItemCategory> Categories { get; set; }


	}

	[XmlRoot("ContentItemSetMember")]
	[Serializable]
	public partial class ContentItemSetMember
	{

		[XmlAttribute("order")]
		public int Order { get; set; }


		[XmlElement("contentItem",typeof(ContentItem))]
		public ContentItem ContentItem { get; set; }


	}

	[XmlRoot("ContentItem")]
	[Serializable]
	public partial class ContentItem
	{

		public  ContentItem() 
		{
			Tags = null;
			Categories = null;
			Alignments = null;
			MediaAssets = null;
			Requires = null;
			IsRequiredBy = null;
		}


		[XmlAttribute("name")]
		public string Name { get; set; }

		[XmlAttribute("title")]
		public string Title { get; set; }

		[XmlAttribute("versionId")]
		public int VersionId { get; set; }

		[XmlIgnore]
		public SchemaType Schema { get; set; }

		[XmlAttribute("schema")]
		public string SchemaString
		{
			get { return Schema.ToString(); }
			set
			{
				SchemaType schema;
				if (Enum.TryParse(value, true, out schema))
					Schema = schema;
			}
		}

		[XmlIgnore]
		public DocumentType DocumentTypeName { get; set; }

		[XmlAttribute("documentTypeName")]
		public string DocumentTypeNameString
		{
			get { return DocumentTypeName.ToString(); }
			set
			{
				DocumentType documentTypeName;
				if (Enum.TryParse(value, true, out documentTypeName))
					DocumentTypeName = documentTypeName;
			}
		}

		[XmlIgnore]
		public InteractionType InteractionType { get; set; }

		[XmlAttribute("interactionType")]
		public string InteractionTypeString
		{
			get { return InteractionType.ToString(); }
			set
			{
				InteractionType interactionType;
				if (Enum.TryParse(value, true, out interactionType))
					InteractionType = interactionType;
			}
		}

		[XmlAttribute("interactionTypeResponse")]
		public string InteractionTypeResponse { get; set; }

		[XmlAttribute("experimental")]
		public bool Experimental { get; set; }

		[XmlAttribute("duration")]
		public string Duration { get; set; }

		[XmlAttribute("location")]
		public string Location { get; set; }


		[XmlArray("tags")]
		[XmlArrayItem("tag")]
		public JNameObjectCollection<Tag> Tags { get; set; }

		[XmlArray("categories")]
		[XmlArrayItem("category")]
		public JObjectCollection<Category> Categories { get; set; }

		[XmlArray("alignments")]
		[XmlArrayItem("alignment")]
		public JObjectCollection<Alignment> Alignments { get; set; }

		[XmlArray("mediaAssets")]
		[XmlArrayItem("mediaAsset")]
		public JNameObjectCollection<MediaAsset> MediaAssets { get; set; }

		[XmlArray("requires")]
		[XmlArrayItem("contentItem")]
		public JNameObjectCollection<ContentItem> Requires { get; set; }

		[XmlArray("isRequiredBy")]
		[XmlArrayItem("contentItem")]
		public JNameObjectCollection<ContentItem> IsRequiredBy { get; set; }


	}

	[XmlRoot("Tag")]
	[Serializable]
	public partial class Tag
	{

		[XmlAttribute("name")]
		public string Name { get; set; }



	}

	[XmlRoot("Category")]
	[Serializable]
	public partial class Category
	{

		[XmlAttribute("guId")]
		public string GuId { get; set; }

		[XmlAttribute("path")]
		public string Path { get; set; }



	}

	[XmlRoot("Alignment")]
	[Serializable]
	public partial class Alignment
	{

		[XmlAttribute("guId")]
		public string GuId { get; set; }

		[XmlAttribute("path")]
		public string Path { get; set; }

		[XmlIgnore]
		public AlignmentType AlignmentType { get; set; }

		[XmlAttribute("alignmentType")]
		public string AlignmentTypeString
		{
			get { return AlignmentType.ToString(); }
			set
			{
				AlignmentType alignmentType;
				if (Enum.TryParse(value, true, out alignmentType))
					AlignmentType = alignmentType;
			}
		}

		[XmlAttribute("target")]
		public string Target { get; set; }



	}

	[XmlRoot("MediaAsset")]
	[Serializable]
	public partial class MediaAsset
	{

		[XmlAttribute("name")]
		public string Name { get; set; }

		[XmlAttribute("location")]
		public string Location { get; set; }

		[XmlAttribute("type")]
		public string Type { get; set; }

		[XmlAttribute("mediaBase")]
		public string MediaBase { get; set; }



	}

	[XmlRoot("SequenceRule")]
	[Serializable]
	public partial class SequenceRule
	{
		private readonly JObjectCollection<Rule>    _rules;

		public  SequenceRule() 
		{
			_rules = new JObjectCollection<Rule>();
		}



		[XmlArray("rules")]
		[XmlArrayItem("rule")]
		public JObjectCollection<Rule> Rules
		{
			 get { return _rules; }
		}


	}

	[XmlRoot("Rule")]
	[Serializable]
	public partial class Rule
	{

		public  Rule() 
		{
			Type = RuleType.Post;
		}


		[XmlIgnore]
		public RuleType Type { get; set; }

		[XmlAttribute("type")]
		public string TypeString
		{
			get { return Type.ToString(); }
			set
			{
				RuleType type;
				if (Enum.TryParse(value, true, out type))
					Type = type;
			}
		}


		[XmlElement("condition",typeof(Condition))]
		public Condition Condition { get; set; }

		[XmlElement("target",typeof(Target))]
		public Target Target { get; set; }


	}

	[XmlRoot("Condition")]
	[Serializable]
	public partial class Condition
	{

		[XmlAttribute("itemName")]
		public string ItemName { get; set; }

		[XmlIgnore]
		public NodeType ItemType { get; set; }

		[XmlAttribute("itemType")]
		public string ItemTypeString
		{
			get { return ItemType.ToString(); }
			set
			{
				NodeType itemType;
				if (Enum.TryParse(value, true, out itemType))
					ItemType = itemType;
			}
		}

		[XmlIgnore]
		public ConditionType Type { get; set; }

		[XmlAttribute("type")]
		public string TypeString
		{
			get { return Type.ToString(); }
			set
			{
				ConditionType type;
				if (Enum.TryParse(value, true, out type))
					Type = type;
			}
		}



	}

	[XmlRoot("IsCorrectCondition")]
	[Serializable]
	public partial class IsCorrectCondition : Condition
	{



	}

	[XmlRoot("AnswerChoiceCondition")]
	[Serializable]
	public partial class AnswerChoiceCondition : Condition
	{
		private readonly JObjectCollection<ChoiceCondition>    _choiceConditions;

		public  AnswerChoiceCondition() 
		{
			_choiceConditions = new JObjectCollection<ChoiceCondition>();
		}



		[XmlArray("choiceConditions")]
		[XmlArrayItem("choiceCondition")]
		public JObjectCollection<ChoiceCondition> ChoiceConditions
		{
			 get { return _choiceConditions; }
		}


	}

	[XmlRoot("ChoiceCondition")]
	[Serializable]
	public partial class ChoiceCondition
	{

		[XmlAttribute("choiceIndex")]
		public int ChoiceIndex { get; set; }

		[XmlIgnore]
		public BinaryOperator Oprtr { get; set; }

		[XmlAttribute("oprtr")]
		public string OprtrString
		{
			get { return Oprtr.ToString(); }
			set
			{
				BinaryOperator oprtr;
				if (Enum.TryParse(value, true, out oprtr))
					Oprtr = oprtr;
			}
		}



	}

	[XmlRoot("Target")]
	[Serializable]
	public partial class Target
	{

		[XmlIgnore]
		public TargetType Type { get; set; }

		[XmlAttribute("type")]
		public string TypeString
		{
			get { return Type.ToString(); }
			set
			{
				TargetType type;
				if (Enum.TryParse(value, true, out type))
					Type = type;
			}
		}



	}

	[XmlRoot("NavigateTarget")]
	[Serializable]
	public partial class NavigateTarget : Target
	{

		[XmlAttribute("itemName")]
		public string ItemName { get; set; }

		[XmlIgnore]
		public NodeType ItemType { get; set; }

		[XmlAttribute("itemType")]
		public string ItemTypeString
		{
			get { return ItemType.ToString(); }
			set
			{
				NodeType itemType;
				if (Enum.TryParse(value, true, out itemType))
					ItemType = itemType;
			}
		}



	}

	[XmlRoot("FixedTarget")]
	[Serializable]
	public partial class FixedTarget : Target
	{

		[XmlIgnore]
		public FixedTargetType Target { get; set; }

		[XmlAttribute("target")]
		public string TargetString
		{
			get { return Target.ToString(); }
			set
			{
				FixedTargetType target;
				if (Enum.TryParse(value, true, out target))
					Target = target;
			}
		}



	}

}

